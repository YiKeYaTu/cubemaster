webpackJsonp([0],{

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(1);


/***/ },

/***/ 1:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactDom = __webpack_require__(154);

	var _redux = __webpack_require__(155);

	var _reactRedux = __webpack_require__(168);

	var _reduxThunk = __webpack_require__(181);

	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);

	var _combination_reducers = __webpack_require__(182);

	var _combination_reducers2 = _interopRequireDefault(_combination_reducers);

	var _combination = __webpack_require__(189);

	var _combination2 = _interopRequireDefault(_combination);

	var _header_action = __webpack_require__(184);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var store = (0, _redux.createStore)(_combination_reducers2.default, (0, _redux.applyMiddleware)(_reduxThunk2.default));

	// store.dispatch(getLoginInf()).then(() => {

	//     let res = store.getState()

	//     let redirect = res && res.loginInf && res.loginInf.redirect

	//     if (redirect) {
	//         window.location = `/cubemaster/user/redirectLogin?redirect=${redirect}`
	//     }

	// })

	(0, _reactDom.render)(_react2.default.createElement(
	    _reactRedux.Provider,
	    { store: store },
	    _react2.default.createElement(_combination2.default, null)
	), document.getElementById('container'));

/***/ },

/***/ 182:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _redux = __webpack_require__(155);

	var _header_reducers = __webpack_require__(183);

	var _combination_action = __webpack_require__(188);

	var INIT_POS = '-60px',
	    NEXT_POS = '0px',
	    INIT_HTML = '待插入',
	    NEXT_HTML = '已插入';

	var _INIT_LEFT = '525px';

	function getInitData() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];

	    switch (action.type) {
	        case _combination_action.ADD_AJAX_DATA:
	            return _getInf(action.json.dataset, '0');
	        default:
	            return state;
	    }
	}

	// {"algorithm":[{"algorithm_id":"3","algorithm_name":"wordSplit","associated_tasks":"分类算法","data_requirements":"无","data_test":"无","description":"分词","file_path":"5\\algorithm\\TestLyWordSplit.jar","in_pattern":"无","ispublic":"0","key_word":[{"keyword":"分词","keyword_id":3}],"out_pattern":"无","package_name":"wordSplitLy2.LyWordSplit2","parameter_count":"0","parameters":[],"platform":"java","scope":"1000","submit_datetime":"2016-03-20 11:09:18","user_name":"lyaa"},{"algorithm_id":"4","algorithm_name":"WordSplit1","associated_tasks":"分类算法","data_requirements":"wu ","data_test":"wu","description":"wu","file_path":"5\\algorithm\\TestLyWordSplit.jar","in_pattern":"wu","ispublic":"0","key_word":[{"keyword":"wu","keyword_id":4}],"out_pattern":"wu","package_name":"wordSplitLy2.LyWordSplit2","parameter_count":"0","parameters":[],"platform":"java","scope":"1000","submit_datetime":"2016-03-20 11:58:52","user_name":"lyaa"},{"algorithm_id":"7","algorithm_name":"kmeans","associated_tasks":"分类算法","data_requirements":"1","data_test":"1","description":"kmeans","file_path":"1\\algorithm\\testknn6.jar","in_pattern":"1","ispublic":"0","key_word":[{"keyword":"kmeans","keyword_id":7}],"out_pattern":"1","package_name":"kn.KNN","parameter_count":"1","parameters":[{"parameter_id":4,"parameter_name":"k","parameter_type":"int","parameter_value":"3"}],"platform":"java","scope":"1","submit_datetime":"2016-03-21 19:44:36"},{"algorithm_id":"8","algorithm_name":"knn3","associated_tasks":"分类算法","data_requirements":"f","data_test":"f","description":"f","file_path":"1\\algorithm\\Knn6.0.jar","in_pattern":"f","ispublic":"0","key_word":[{"keyword":"分类","keyword_id":8}],"out_pattern":"f","package_name":"knn.KNN","parameter_count":"1","parameters":[{"parameter_id":5,"parameter_name":"k","parameter_type":"int","parameter_value":"3"}],"platform":"java","scope":"1222","submit_datetime":"2016-03-22 00:03:21"},{"algorithm_id":"1","algorithm_name":"testKnn5","associated_tasks":"分类算法","data_requirements":"e","data_test":"e","description":"e","file_path":"5\\algorithm\\Knn6.0.jar","in_pattern":"e","ispublic":"0","key_word":[{"keyword":"e","keyword_id":1}],"out_pattern":"e","package_name":"knn.KNN","parameter_count":"1","parameters":[{"parameter_id":1,"parameter_name":"e","parameter_type":"int","parameter_value":"3"}],"platform":"java","scope":"e","submit_datetime":"2016-03-20 10:36:06","user_name":"lyaa"},{"algorithm_id":"2","algorithm_name":"wordSplit","associated_tasks":"分类算法","data_requirements":"无","data_test":"无","description":"分词","file_path":"5\\algorithm\\TestLyWordSplit.jar","in_pattern":"无","ispublic":"0","key_word":[{"keyword":"分词","keyword_id":2}],"out_pattern":"无","package_name":"wordSplitLy2.LyWordSplit2","parameter_count":"0","parameters":[],"platform":"java","scope":"1000","submit_datetime":"2016-03-20 11:09:09","user_name":"lyaa"}],"dataset":[{"area":"无","associated_tasks":"分类算法","attribute_count":"2","attributes":[{"attribute_character":0,"attribute_id":1,"attribute_label":0,"attribute_missing":"无","attribute_name":"ll","attribute_range":"无","attribute_sequence":1,"attribute_type":"数值"},{"attribute_character":0,"attribute_id":2,"attribute_label":1,"attribute_missing":"无","attribute_name":"label","attribute_range":"无","attribute_sequence":2,"attribute_type":"数值"}],"dataset_id":"1","dataset_name":"文本数据","dataset_type":"0","description":"文本","download_count":"0","file_path":"3\\dataset\\word.txt","ispublic":"0","number_examples":"","platform":"java","submit_datetime":"2016-03-18 19:27:58","user_name":"lya"},{"area":"e","associated_tasks":"分类算法","attribute_count":"5","attributes":[{"attribute_character":0,"attribute_id":3,"attribute_label":0,"attribute_missing":"21","attribute_name":"a1","attribute_range":"12","attribute_sequence":1,"attribute_type":"数值"},{"attribute_character":0,"attribute_id":4,"attribute_label":0,"attribute_missing":"12","attribute_name":"a2","attribute_range":"12","attribute_sequence":2,"attribute_type":"数值"},{"attribute_character":0,"attribute_id":5,"attribute_label":0,"attribute_missing":"12","attribute_name":"a3","attribute_range":"12","attribute_sequence":3,"attribute_type":"数值"},{"attribute_character":0,"attribute_id":6,"attribute_label":0,"attribute_missing":"12","attribute_name":"a4","attribute_range":"12","attribute_sequence":4,"attribute_type":"数值"},{"attribute_character":0,"attribute_id":7,"attribute_label":1,"attribute_missing":"12","attribute_name":"a5","attribute_range":"12","attribute_sequence":5,"attribute_type":"文本"}],"dataset_id":"2","dataset_name":"iris","dataset_type":"0","description":"e","download_count":"0","file_path":"5\\dataset\\iris.data","ispublic":"0","number_examples":"","platform":"java","submit_datetime":"2016-03-20 10:38:14","user_name":"lyaa"}],"protocol":"A-3-1-response"}

	function getInitAlgorithmItem() {
	    var state = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];
	    var action = arguments[1];

	    switch (action.type) {
	        case _combination_action.ADD_AJAX_DATA:
	            return _getInf(action.json.algorithm, '1');
	        default:
	            return state;
	    }
	}

	function _randomColor() {
	    return Math.floor(Math.random() * 60 + 150);
	}

	//将接受到的item数据转化成对象的形式
	function _getInf(item, type) {

	    var obj = {};

	    item.forEach(function (item, index) {
	        obj[type + index] = {
	            index: index,
	            type: type,
	            showParameter: false,
	            itemLeft: type == 1 ? 460 + index % 2 * 120 + 'px' : 100 + index % 2 * 120 + 'px',
	            itemTop: Math.floor(index / 2) * 120 + 'px',
	            value: item.algorithm_name || item.dataset_name, //数据或者算法的名称
	            serverData: item, //该元素相关数据
	            right: INIT_POS, //数据或者算法左边元素的遮盖层的right
	            background: 'rgb(' + _randomColor() + ', ' + _randomColor() + ', ' + _randomColor() + ')', //元素的颜色
	            itemHasAdd: false, //这个元素是否被插入到canvas上
	            buttonInnerHTML: INIT_HTML };
	    });

	    //遮盖层显示什么
	    return obj;
	}

	var combinationReducers = (0, _redux.combineReducers)({

	    move: (0, _header_reducers.move)(_INIT_LEFT),
	    loginInf: _header_reducers.loginInf,
	    getInitData: getInitData,
	    getInitAlgorithmItem: getInitAlgorithmItem,

	    INIT_LEFT: function INIT_LEFT() {

	        return _INIT_LEFT;
	    }

	});

	exports.default = combinationReducers;

/***/ },

/***/ 188:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.SEND_CONNECT = exports.ADD_AJAX_DATA = exports.ADD_ACTIVE_INDEX = undefined;

	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol ? "symbol" : typeof obj; };

	exports.addActiveIndex = addActiveIndex;
	exports.addAjaxData = addAjaxData;
	exports.sendConnect = sendConnect;
	exports.fetchPosts = fetchPosts;
	exports.fetchConnect = fetchConnect;

	var _isomorphicFetch = __webpack_require__(185);

	var _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);

	var _urlConfig = __webpack_require__(187);

	var _urlConfig2 = _interopRequireDefault(_urlConfig);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	var ADD_ACTIVE_INDEX = exports.ADD_ACTIVE_INDEX = 'ADD_ACTIVE_INDEX';
	var ADD_AJAX_DATA = exports.ADD_AJAX_DATA = 'ADD_AJAX_DATA';
	var SEND_CONNECT = exports.SEND_CONNECT = 'SEND_CONNECT';

	function addActiveIndex(obj) {
	    return {
	        type: ADD_ACTIVE_INDEX,
	        obj: obj
	    };
	}

	function addAjaxData(json) {
	    return {
	        type: ADD_AJAX_DATA,
	        json: json
	    };
	}

	function sendConnect(json) {
	    return {
	        type: SEND_CONNECT,
	        json: json
	    };
	}

	function fetchPosts() {

	    return function (dispatch) {

	        return (0, _isomorphicFetch2.default)('./', {
	            // return fetch(urlConfig.getDataServer, {
	            credentials: 'include'
	        })
	        // .then(response => response.json())
	        .then(function (json) {
	            json = { "algorithm": [{ "algorithm_id": "3", "algorithm_name": "wordSplit", "associated_tasks": "分类算法", "data_requirements": "无", "data_test": "无", "description": "分词", "file_path": "5\\algorithm\\TestLyWordSplit.jar", "in_pattern": "无", "ispublic": "0", "key_word": [{ "keyword": "分词", "keyword_id": 3 }], "out_pattern": "无", "package_name": "wordSplitLy2.LyWordSplit2", "parameter_count": "0", "parameters": [], "platform": "java", "scope": "1000", "submit_datetime": "2016-03-20 11:09:18", "user_name": "lyaa" }, { "algorithm_id": "4", "algorithm_name": "WordSplit1", "associated_tasks": "分类算法", "data_requirements": "wu ", "data_test": "wu", "description": "wu", "file_path": "5\\algorithm\\TestLyWordSplit.jar", "in_pattern": "wu", "ispublic": "0", "key_word": [{ "keyword": "wu", "keyword_id": 4 }], "out_pattern": "wu", "package_name": "wordSplitLy2.LyWordSplit2", "parameter_count": "0", "parameters": [], "platform": "java", "scope": "1000", "submit_datetime": "2016-03-20 11:58:52", "user_name": "lyaa" }, { "algorithm_id": "7", "algorithm_name": "kmeans", "associated_tasks": "分类算法", "data_requirements": "1", "data_test": "1", "description": "kmeans", "file_path": "1\\algorithm\\testknn6.jar", "in_pattern": "1", "ispublic": "0", "key_word": [{ "keyword": "kmeans", "keyword_id": 7 }], "out_pattern": "1", "package_name": "kn.KNN", "parameter_count": "1", "parameters": [{ "parameter_id": 4, "parameter_name": "k", "parameter_type": "int", "parameter_value": "3" }], "platform": "java", "scope": "1", "submit_datetime": "2016-03-21 19:44:36" }, { "algorithm_id": "8", "algorithm_name": "knn3", "associated_tasks": "分类算法", "data_requirements": "f", "data_test": "f", "description": "f", "file_path": "1\\algorithm\\Knn6.0.jar", "in_pattern": "f", "ispublic": "0", "key_word": [{ "keyword": "分类", "keyword_id": 8 }], "out_pattern": "f", "package_name": "knn.KNN", "parameter_count": "1", "parameters": [{ "parameter_id": 5, "parameter_name": "k", "parameter_type": "int", "parameter_value": "3" }], "platform": "java", "scope": "1222", "submit_datetime": "2016-03-22 00:03:21" }, { "algorithm_id": "1", "algorithm_name": "testKnn5", "associated_tasks": "分类算法", "data_requirements": "e", "data_test": "e", "description": "e", "file_path": "5\\algorithm\\Knn6.0.jar", "in_pattern": "e", "ispublic": "0", "key_word": [{ "keyword": "e", "keyword_id": 1 }], "out_pattern": "e", "package_name": "knn.KNN", "parameter_count": "1", "parameters": [{ "parameter_id": 1, "parameter_name": "e", "parameter_type": "int", "parameter_value": "3" }], "platform": "java", "scope": "e", "submit_datetime": "2016-03-20 10:36:06", "user_name": "lyaa" }, { "algorithm_id": "2", "algorithm_name": "wordSplit", "associated_tasks": "分类算法", "data_requirements": "无", "data_test": "无", "description": "分词", "file_path": "5\\algorithm\\TestLyWordSplit.jar", "in_pattern": "无", "ispublic": "0", "key_word": [{ "keyword": "分词", "keyword_id": 2 }], "out_pattern": "无", "package_name": "wordSplitLy2.LyWordSplit2", "parameter_count": "0", "parameters": [], "platform": "java", "scope": "1000", "submit_datetime": "2016-03-20 11:09:09", "user_name": "lyaa" }], "dataset": [{ "area": "无", "associated_tasks": "分类算法", "attribute_count": "2", "attributes": [{ "attribute_character": 0, "attribute_id": 1, "attribute_label": 0, "attribute_missing": "无", "attribute_name": "ll", "attribute_range": "无", "attribute_sequence": 1, "attribute_type": "数值" }, { "attribute_character": 0, "attribute_id": 2, "attribute_label": 1, "attribute_missing": "无", "attribute_name": "label", "attribute_range": "无", "attribute_sequence": 2, "attribute_type": "数值" }], "dataset_id": "1", "dataset_name": "文本数据", "dataset_type": "0", "description": "文本", "download_count": "0", "file_path": "3\\dataset\\word.txt", "ispublic": "0", "number_examples": "", "platform": "java", "submit_datetime": "2016-03-18 19:27:58", "user_name": "lya" }, { "area": "e", "associated_tasks": "分类算法", "attribute_count": "5", "attributes": [{ "attribute_character": 0, "attribute_id": 3, "attribute_label": 0, "attribute_missing": "21", "attribute_name": "a1", "attribute_range": "12", "attribute_sequence": 1, "attribute_type": "数值" }, { "attribute_character": 0, "attribute_id": 4, "attribute_label": 0, "attribute_missing": "12", "attribute_name": "a2", "attribute_range": "12", "attribute_sequence": 2, "attribute_type": "数值" }, { "attribute_character": 0, "attribute_id": 5, "attribute_label": 0, "attribute_missing": "12", "attribute_name": "a3", "attribute_range": "12", "attribute_sequence": 3, "attribute_type": "数值" }, { "attribute_character": 0, "attribute_id": 6, "attribute_label": 0, "attribute_missing": "12", "attribute_name": "a4", "attribute_range": "12", "attribute_sequence": 4, "attribute_type": "数值" }, { "attribute_character": 0, "attribute_id": 7, "attribute_label": 1, "attribute_missing": "12", "attribute_name": "a5", "attribute_range": "12", "attribute_sequence": 5, "attribute_type": "文本" }], "dataset_id": "2", "dataset_name": "iris", "dataset_type": "0", "description": "e", "download_count": "0", "file_path": "5\\dataset\\iris.data", "ispublic": "0", "number_examples": "", "platform": "java", "submit_datetime": "2016-03-20 10:38:14", "user_name": "lyaa" }], "protocol": "A-3-1-response" };

	            dispatch(addAjaxData(json));
	        });
	    };
	}

	function fetchConnect(argument) {

	    var data = '';

	    for (var key in argument) {
	        if (argument.hasOwnProperty(key)) {
	            if (_typeof(argument[key]) === 'object') {
	                argument[key] = JSON.stringify(argument[key]);
	            }
	            data += key + '=' + argument[key] + '&';
	        }
	    }

	    return function (dispatch) {
	        return (0, _isomorphicFetch2.default)(_urlConfig2.default.runServer, {
	            credentials: 'include',
	            method: 'POST',
	            headers: {
	                'Content-Type': 'application/x-www-form-urlencoded'
	            },
	            body: data.slice(0, -1)
	        }).then(function (response) {
	            return response.json();
	        }).then(function (json) {
	            dispatch(sendConnect(json));
	        });
	    };
	}

/***/ },

/***/ 189:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _reactRedux = __webpack_require__(168);

	var _content = __webpack_require__(190);

	var _content2 = _interopRequireDefault(_content);

	var _Content = __webpack_require__(194);

	var _Content2 = _interopRequireDefault(_Content);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var App = function (_Component) {
	    _inherits(App, _Component);

	    function App() {
	        _classCallCheck(this, App);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(App).apply(this, arguments));
	    }

	    _createClass(App, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'section',
	                {
	                    style: {
	                        width: '100%'
	                    }
	                },
	                _react2.default.createElement(_content2.default, this.props),
	                _react2.default.createElement(_Content2.default, this.props)
	            );
	        }
	    }]);

	    return App;
	}(_react.Component);

	exports.default = (0, _reactRedux.connect)(function (state) {

	    return {
	        move: state.move,
	        initData: state.getInitData,
	        initAlgorithmItem: state.getInitAlgorithmItem,
	        INIT_LEFT: state.INIT_LEFT,
	        loginInf: state.loginInf
	    };
	})(App);

/***/ },

/***/ 194:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _data_item = __webpack_require__(195);

	var _data_item2 = _interopRequireDefault(_data_item);

	var _combination = __webpack_require__(196);

	var _combination2 = _interopRequireDefault(_combination);

	var _combination_action = __webpack_require__(188);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function getFreeContentHeight() {
	    return window.innerHeight - 60;
	}

	function objToArr(obj) {
	    var dataInf = [];
	    for (var key in obj) {
	        if (obj.hasOwnProperty(key)) {
	            dataInf.push(obj[key]);
	        }
	    }
	    return dataInf;
	}

	var Content = _react2.default.createClass({
	    displayName: 'Content',

	    //初始化 数据元素   算法元素的stateINIT_POS = '-60px',
	    nextPos: '0px',
	    initPos: '-60px',
	    initInnerHTML: '待插入',
	    nextInnerHTML: '已插入',
	    getInitialState: function getInitialState() {
	        return {
	            dataInf: this.props.initData,
	            algorithmInf: this.props.initAlgorithmItem,
	            dataOver: false,
	            res: {
	                '20': {
	                    connectInterface: {
	                        inInterface: true,
	                        outInterface: false
	                    },
	                    last: true
	                }
	            },
	            activeIndex: [], // 正在执行连接元素
	            parentIndex: null, //正在执行连接元素的父节点
	            childIndex: null,
	            activeEl: null, //正在被拖动的dom元素
	            connectIndex: [] };
	    },
	    // 已经连接的元素  通过树进行连接 通过接口判断是否可以连接
	    componentDidMount: function componentDidMount() {
	        var _this = this;

	        this.props.dispatch((0, _combination_action.fetchPosts)()).then(function () {
	            _this.setState({
	                dataOver: true,
	                dataInf: _this.props.initData,
	                algorithmInf: _this.props.initAlgorithmItem
	            });
	        });
	    },

	    //给连接点添加事件  点击后将该元素纳入state里面的activeIndex里面
	    //如果activeIndex的length === 2那么就执行连接判断

	    //将connectIndex进行更新
	    updateConnectIndex: function updateConnectIndex(activeIndex) {
	        var _this2 = this;

	        var root = this.state.connectIndex,
	            parent = this.state.parentIndex,
	            child = this.state.childIndex;

	        activeIndex.forEach(function (item) {

	            if (item.type == 1) {

	                var target = _this2.state.algorithmInf[item.type + item.index];

	                if (target.serverData.parameters.length > 0 && !target.showParameter) {

	                    _this2.handleShowMore(item.type, item.index);
	                }
	            }
	        });

	        var createStateConnectNode = this.createStateConnectNode,
	            clearRootChild = this.clearRootChild,
	            judInterface = this.judInterface;

	        if (!judInterface(parent, child)) {
	            this.cannotConnect('端口被占用');
	        } else {
	            if (parent && child) {
	                clearRootChild();
	                parent.child.push(child);
	                parent.data.connectInterface.outInterface = false;
	                child.data.connectInterface.inInterface = false;
	            } else if (parent && !child) {
	                parent.child.push(createStateConnectNode(activeIndex[1]));
	                parent.data.connectInterface.outInterface = false;
	            } else if (!parent && child) {
	                child.data.connectInterface.inInterface = false;
	                var temp = createStateConnectNode(activeIndex[0]);
	                temp.child.push(child);
	                clearRootChild();
	                root = this.state.connectIndex;
	                root.push(temp);
	            } else {
	                var _temp = createStateConnectNode(activeIndex[0]);
	                _temp.child.push(createStateConnectNode(activeIndex[1]));
	                root.push(_temp);
	            }
	        }
	        this.setState({
	            parentIndex: null,
	            childIndex: null,
	            activeIndex: [],
	            connectIndex: this.state.connectIndex
	        }, function () {
	            console.log(_this2.state.connectIndex);
	        });
	    },

	    //删除root节点中的将要被插入其他子节点的节点
	    clearRootChild: function clearRootChild() {
	        var child = this.state.childIndex;

	        this.state.connectIndex = this.state.connectIndex.filter(function (item, index) {
	            if (item.data.type != child.data.type || item.data.index != child.data.index) {
	                return item;
	            }
	        });
	    },

	    //点击时判断这个节点端口是否已经被占用
	    judClickInterface: function judClickInterface(typeId, indexId, buttonType) {
	        var id = typeId + indexId;
	        var data = void 0;
	        if (typeId == 0) {
	            data = this.state.dataInf;
	        } else if (typeId == 1) {
	            data = this.state.algorithmInf;
	        } else if (typeId == 2) {
	            data = this.state.res;
	        }
	        if (buttonType == 0) {
	            return !data[id].connectInterface || data[id].connectInterface.inInterface;
	        } else if (buttonType == 1) {
	            return !data[id].connectInterface || data[id].connectInterface.outInterface;
	        }
	    },
	    judInterface: function judInterface(parent, child) {
	        if (parent && child) {
	            return parent.data.connectInterface.outInterface && child.data.connectInterface.inInterface;
	        } else if (parent && !child) {
	            return parent.data.connectInterface.outInterface;
	        } else if (!parent && child) {
	            return child.data.connectInterface.inInterface;
	        } else {
	            return true;
	        }
	    },

	    // 创建节点 放入树中
	    createStateConnectNode: function createStateConnectNode(inf) {
	        var data = void 0;
	        var type = inf.type,
	            buttonType = inf.buttonType;
	        if (type == 0) {
	            data = this.state.dataInf[inf.type + inf.index];
	        } else if (type == 1) {
	            data = this.state.algorithmInf[inf.type + inf.index];
	        } else if (type == 2) {
	            data = this.state.res[inf.type + inf.index];
	        }
	        data.connectInterface = {
	            inInterface: buttonType === 1 ? true : false,
	            outInterface: buttonType === 1 ? false : true
	        };
	        data.pos = inf.pos;
	        return {
	            data: data,
	            child: []
	        };
	    },
	    cannotConnect: function cannotConnect(error) {
	        console.error(error);
	    },


	    //遍历整个树
	    walkTree: function walkTree(node, callback) {
	        var i = 0;
	        callback(node);
	        node = node.child;
	        while (node[i]) {
	            node && this.walkTree(node[i++], callback);
	        }
	    },

	    //找出对应type的state
	    getData: function getData(type) {
	        return type == 0 ? this.state.dataInf : this.state.algorithmInf;
	    },

	    //设定对应type的state
	    chooseDataToset: function chooseDataToset(typeId, data, callback) {
	        if (typeId == 0) {
	            this.setState({
	                dataInf: data
	            }, callback);
	        } else if (typeId == 1) {
	            this.setState({
	                algorithmInf: data
	            }, callback);
	        }
	    },

	    //判断两点是否可以连接  并且拿出父节点
	    handleConnectButtonJudConnect: function handleConnectButtonJudConnect(activeIndex) {
	        var _this3 = this;

	        if (activeIndex[0].type + activeIndex[0].index === activeIndex[1].type + activeIndex[1].index) {
	            return this.cannotConnect('同一算法无法连接');
	        }

	        var connectIndex = this.state.connectIndex;
	        var flag = 200;
	        var parent = void 0;

	        if (activeIndex[0].buttonType === activeIndex[1].buttonType) {
	            //是不是不同的接口 左  右
	            flag = 400;
	            return flag;
	        }
	        connectIndex.forEach(function (item, index) {
	            if (item) {
	                _this3.walkTree(item, function (node) {
	                    if (node.data.type == activeIndex[0].type && node.data.index == activeIndex[0].index) {
	                        _this3.state.parentIndex = node;
	                    } else if (node.data.type == activeIndex[1].type && node.data.index == activeIndex[1].index) {
	                        _this3.state.childIndex = node;
	                    }
	                });
	            }
	        });
	        return flag;
	    },

	    //连接端口
	    handleConnectButtonClick: function handleConnectButtonClick(typeId, indexId, buttonType, pos) {
	        var activeIndex = this.state.activeIndex.slice();
	        var status = void 0;

	        if (!this.judClickInterface(typeId, indexId, buttonType)) {
	            return this.cannotConnect('端口被占用');
	        }

	        activeIndex.push({
	            type: typeId,
	            index: indexId,
	            buttonType: buttonType,
	            pos: pos
	        });

	        if (activeIndex.length === 2) {
	            //交换button位置
	            if (activeIndex[0].buttonType == 0) {
	                var temp = activeIndex[0];
	                activeIndex[0] = activeIndex[1];
	                activeIndex[1] = temp;
	            }

	            if ((status = this.handleConnectButtonJudConnect(activeIndex)) !== 200) {
	                this.cannotConnect(status);
	            } else {
	                this.updateConnectIndex(activeIndex);
	            }
	        } else if (activeIndex.length === 1) {

	            this.setState({
	                activeIndex: activeIndex
	            });
	        }
	    },
	    handleSetParameters: function handleSetParameters(typeId, indexId, parameter_id, val) {

	        var target = this.state.algorithmInf[typeId + indexId];

	        if (!target.countParameters) {

	            target.countParameters = {
	                len: 0
	            };
	        }

	        if (!target.countParameters[parameter_id]) {

	            if (val != '') {

	                target.countParameters[parameter_id] = {};
	                target.countParameters.len++;
	            }
	        } else {

	            target.countParameters[parameter_id].val = val;
	            if (val == '') {
	                delete target.countParameters[parameter_id];
	                target.countParameters.len--;
	            }
	        }

	        if (target.serverData.parameters) {
	            target.serverData.parameters = target.serverData.parameters.map(function (item, index) {

	                if (item.parameter_id == parameter_id) {
	                    item.parameter_value = val;
	                }

	                return item;
	            });
	        }

	        this.setState({
	            algorithmInf: this.state.algorithmInf
	        });
	    },
	    handleShowMore: function handleShowMore(typeId, indexId) {

	        var flag = this.state.algorithmInf[typeId + indexId].showParameter;

	        this.state.algorithmInf[typeId + indexId].showParameter = !flag;
	        this.setState({
	            algorithmInf: this.state.algorithmInf
	        });
	    },

	    //封装数据 算法元素的鼠标事件
	    handleOverAndOut: function handleOverAndOut(typeId, indexId, type) {
	        var data = this.getData(typeId);
	        var id = typeId + indexId;
	        if (data[id].itemHasAdd) return;
	        data[id].right = type === 0 ? this.nextPos : this.initPos;
	        this.chooseDataToset(typeId, data);
	    },

	    //封装数据 算法元素的鼠标事件
	    handleMouseOver: function handleMouseOver(type, index) {
	        this.handleOverAndOut(type, index, 0);
	    },

	    //封装数据 算法元素的鼠标事件
	    handleMouseOut: function handleMouseOut(type, index) {
	        this.handleOverAndOut(type, index, 1);
	    },

	    //封装数据 算法元素的鼠标事件
	    //点击元素后 将该元素加入到组合池里
	    handleClick: function handleClick(typeId, indexId, buttonType) {
	        var data = this.getData(typeId);
	        var id = typeId + indexId;
	        if (data[id].itemHasAdd) return;
	        data[id].right = this.nextPos;
	        data[id].itemHasAdd = true;
	        data[id].buttonInnerHTML = this.nextInnerHTML;
	        this.chooseDataToset(typeId, data);
	    },

	    //插入元素的删除按钮点击后删除该元素
	    handleRemoveButtonClick: function handleRemoveButtonClick(typeId, indexId) {
	        var data = this.getData(typeId);
	        var id = typeId + indexId;
	        data[id].right = this.initPos;
	        data[id].itemHasAdd = false;
	        data[id].buttonInnerHTML = this.initInnerHTML;
	        this.chooseDataToset(typeId, data);
	        this.removeConnectIndex(typeId, indexId);
	    },

	    //点击线段删除线段
	    handleRemoveLine: function handleRemoveLine(typeId, indexId) {
	        var _this4 = this;

	        var connectIndex = this.state.connectIndex;

	        var parent = void 0,
	            child = void 0,
	            rootIndex = void 0;

	        connectIndex.forEach(function (item, index) {
	            _this4.walkTree(item, function (node) {
	                if (node.data.type == typeId && node.data.index == indexId) {
	                    parent = node;
	                    child = parent.child[0];

	                    if (parent === item) {
	                        rootIndex = index;
	                    }
	                }
	            });
	        });

	        parent.child.pop();
	        parent.data.connectInterface.outInterface = true;
	        child.data.connectInterface.inInterface = true;

	        if (child.child[0]) {
	            connectIndex.push(child);
	        }

	        if (rootIndex >= 0) {
	            connectIndex.splice(rootIndex, 1);
	        }

	        this.setState({
	            connectIndex: connectIndex
	        });
	    },

	    //点击元素后 执行拖动的准备工作
	    handleItemMouseDown: function handleItemMouseDown(typeId, indexId, downPos) {
	        var data = this.getData(typeId);
	        this.setState({
	            activeEl: {
	                downPos: downPos,
	                data: data[typeId + indexId]
	            }
	        });
	    },

	    //放开元素后 将activeEl设置为null
	    handleItemMouseUp: function handleItemMouseUp(typeId, indexId) {
	        this.setState({
	            activeEl: null
	        });
	    },
	    handleItemOuterClearClick: function handleItemOuterClearClick() {
	        this.setState({
	            activeIndex: []
	        });
	    },

	    //元素拖动逻辑
	    handleItemMouseMove: function handleItemMouseMove(x, y) {
	        if (this.state.activeEl) {
	            this.state.activeEl.data.itemLeft = x + 'px';
	            this.state.activeEl.data.itemTop = y + 'px';
	            this.state.activeEl.data.pos = {
	                x: x,
	                y: y
	            };
	            this.setState({
	                connectIndex: this.state.connectIndex,
	                dataInf: this.state.dataInf,
	                algorithmInf: this.state.algorithmInf
	            });
	        }
	    },

	    //点击删除按钮之后删除链接
	    removeConnectIndex: function removeConnectIndex(typeId, indexId) {
	        var _this5 = this;

	        var connectIndex = this.state.connectIndex;
	        var parent = void 0,
	            child = void 0,
	            i = void 0,
	            iIndex = void 0;

	        connectIndex.forEach(function (item, index) {
	            if (item.data.type == typeId && item.data.index == indexId) {
	                i = item;
	                iIndex = index;
	                child = item.child[0];
	            } else {
	                _this5.walkTree(item, function (node) {
	                    var temp = node.child[0];
	                    if (temp && temp.data.type == typeId && temp.data.index == indexId) {
	                        parent = node;
	                        i = temp;
	                        child = temp.child[0];
	                    }
	                });
	            }
	        });
	        if (i) {
	            i.data.connectInterface = {
	                inInterface: true,
	                outInterface: true
	            };
	            i.child.pop();
	        }
	        if (child) {
	            child.data.connectInterface.inInterface = true;
	        }
	        if (!parent) {
	            if (i) {
	                connectIndex.splice(iIndex, 1);
	            }
	        } else {
	            parent.data.connectInterface.outInterface = true;
	            parent.child.pop();
	            this.state.connectIndex = connectIndex.filter(function (item, index) {
	                if (item.data.type != parent.data.type || item.data.index != parent.data.index) {
	                    return item;
	                }
	            });
	        }
	        if (child && child.child[0]) {
	            this.state.connectIndex.push(child);
	        }
	    },
	    render: function render() {
	        var dataInf = objToArr(this.state.dataInf),
	            algorithmInf = objToArr(this.state.algorithmInf);
	        return _react2.default.createElement(ContentComponent, _extends({
	            handleConnectButtonClick: this.handleConnectButtonClick,
	            handleRemoveButtonClick: this.handleRemoveButtonClick,
	            handleMouseOver: this.handleMouseOver,
	            handleMouseOut: this.handleMouseOut,
	            handleClick: this.handleClick,
	            handleItemMouseDown: this.handleItemMouseDown,
	            handleItemMouseUp: this.handleItemMouseUp,
	            handleItemMouseMove: this.handleItemMouseMove,
	            handleItemOuterClearClick: this.handleItemOuterClearClick,
	            handleSetParameters: this.handleSetParameters,
	            handleShowMore: this.handleShowMore,
	            handleRemoveLine: this.handleRemoveLine
	        }, this.state, this.props, {
	            dataInf: dataInf,
	            algorithmInf: algorithmInf
	        }));
	    }
	});

	var ContentComponent = function (_Component) {
	    _inherits(ContentComponent, _Component);

	    function ContentComponent() {
	        _classCallCheck(this, ContentComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(ContentComponent).apply(this, arguments));
	    }

	    _createClass(ContentComponent, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.rebuild();
	            window.onresize = function () {
	                this.rebuild();
	            }.bind(this);
	        }
	    }, {
	        key: 'rebuild',
	        value: function rebuild() {
	            var container = this.refs.container;
	            var containerHeight = parseFloat(getComputedStyle(container)['height']);
	            function rebuildMargin() {
	                var freeHeight = getFreeContentHeight();
	                if (containerHeight < freeHeight) {
	                    container.style.marginTop = (freeHeight - containerHeight) / 2 + 'px';
	                }
	            }
	            rebuildMargin();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var dataInf = objToArr(this.props.dataInf),
	                algorithmInf = objToArr(this.props.algorithmInf);

	            return _react2.default.createElement(
	                'section',
	                {
	                    ref: 'container',
	                    className: 'content-outer',
	                    style: {
	                        width: '1160px',
	                        margin: '0 auto'
	                    }
	                },
	                _react2.default.createElement(
	                    'section',
	                    {
	                        style: {
	                            width: '300px',
	                            float: 'left'
	                        }
	                    },
	                    _react2.default.createElement(Container, _extends({}, this.props, {
	                        dataInf: dataInf,
	                        val: '选择数据',
	                        type: '0'
	                    })),
	                    _react2.default.createElement(Container, _extends({}, this.props, {
	                        dataInf: algorithmInf,
	                        val: '选择算法',
	                        type: '1'
	                    }))
	                ),
	                _react2.default.createElement(
	                    'section',
	                    {
	                        style: {
	                            width: '800px',
	                            float: 'right',
	                            marginRight: '10px'
	                        }
	                    },
	                    _react2.default.createElement(_combination2.default, _extends({}, this.props, {
	                        dataInf: dataInf,
	                        algorithmInf: algorithmInf
	                    }))
	                )
	            );
	        }
	    }]);

	    return ContentComponent;
	}(_react.Component);

	var Container = function (_Component2) {
	    _inherits(Container, _Component2);

	    function Container() {
	        _classCallCheck(this, Container);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(Container).apply(this, arguments));
	    }

	    _createClass(Container, [{
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.rebuildMargin();
	        }
	    }, {
	        key: 'rebuildMargin',
	        value: function rebuildMargin() {
	            var itemContent = this.refs.itemContent;
	            var itemContentHeight = parseFloat(getComputedStyle(itemContent)['height']);
	            var CONTAINER_HEIGHT = 160;

	            if (itemContentHeight < CONTAINER_HEIGHT) {
	                itemContent.style.marginTop = (CONTAINER_HEIGHT - itemContentHeight) / 2 + 'px';
	            }
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps, prevState) {
	            this.rebuildMargin();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this8 = this;

	            var dataInf = objToArr(this.props.dataInf),
	                algorithmInf = objToArr(this.props.algorithmInf);
	            return _react2.default.createElement(
	                'section',
	                {
	                    style: {
	                        width: '280px',
	                        height: '280px',
	                        background: '#f5f5f5',
	                        borderRadius: '100%',
	                        marginTop: '20px',
	                        overflow: 'hidden',
	                        border: '10px solid #f5f5f5'
	                    }
	                },
	                _react2.default.createElement(
	                    'div',
	                    {
	                        style: {
	                            background: 'rgb(84, 182, 231)',
	                            width: '100%',
	                            height: '60px',
	                            textAlign: 'center',
	                            lineHeight: '60px',
	                            color: '#f5f5f5',
	                            fontSize: '20px'
	                        }
	                    },
	                    this.props.val
	                ),
	                _react2.default.createElement('div', {
	                    style: {
	                        width: '280px',
	                        height: '160px',
	                        display: !this.props.dataOver ? 'block' : 'none'
	                    }
	                }),
	                _react2.default.createElement(
	                    'div',
	                    {
	                        ref: 'itemContent',
	                        style: {
	                            width: '232px',
	                            display: this.props.dataOver ? 'block' : 'none',
	                            maxHeight: '150px',
	                            overflowY: 'scroll',
	                            margin: '10px auto',
	                            paddingTop: '10px'
	                        }
	                    },
	                    dataInf.map(function (item, index) {
	                        return _react2.default.createElement(_data_item2.default, _extends({
	                            index: index,
	                            key: index
	                        }, item, _this8.props));
	                    })
	                )
	            );
	        }
	    }]);

	    return Container;
	}(_react.Component);

	exports.default = Content;

/***/ },

/***/ 195:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DataItem = _react2.default.createClass({
	    displayName: 'DataItem',
	    handleMouseOver: function handleMouseOver() {
	        this.props.handleMouseOver(this.props.type, this.props.index);
	    },
	    handleMouseOut: function handleMouseOut() {
	        this.props.handleMouseOut(this.props.type, this.props.index);
	    },
	    handleClick: function handleClick() {
	        this.props.handleClick(this.props.type, this.props.index);
	    },
	    render: function render() {
	        return _react2.default.createElement(DataItemComponent, _extends({}, this.props, {
	            background: this.props.background,
	            handleClick: this.handleClick,
	            handleMouseOut: this.handleMouseOut,
	            handleMouseOver: this.handleMouseOver
	        }));
	    }
	});

	var DataItemComponent = function (_Component) {
	    _inherits(DataItemComponent, _Component);

	    function DataItemComponent() {
	        _classCallCheck(this, DataItemComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(DataItemComponent).apply(this, arguments));
	    }

	    _createClass(DataItemComponent, [{
	        key: 'render',
	        value: function render() {
	            var index = this.props.index,
	                dataInf = this.props.dataInf;
	            return _react2.default.createElement(
	                'div',
	                {
	                    onMouseOver: this.props.handleMouseOver,
	                    onMouseOut: this.props.handleMouseOut,
	                    onClick: this.props.handleClick,
	                    style: {
	                        opacity: this.props.itemOpacity,
	                        width: '100px',
	                        height: '30px',
	                        float: 'left',
	                        marginLeft: this.props.index % 2 === 0 ? '0px' : '16px',
	                        marginBottom: '10px',
	                        background: dataInf[index].background,
	                        color: '#fff',
	                        position: 'relative',
	                        textAlign: 'center',
	                        lineHeight: '30px',
	                        cursor: 'pointer',
	                        transition: 'all .4s',
	                        overflow: 'hidden',
	                        borderRadius: this.props.type == '0' ? '20px' : '2px'
	                    }
	                },
	                this.props.value,
	                _react2.default.createElement(
	                    'span',
	                    {
	                        ref: 'addInf',
	                        style: {
	                            display: 'block',
	                            width: '60px',
	                            height: '30px',
	                            background: 'rgba(0, 0, 0, 0.3)',
	                            position: 'absolute',
	                            right: dataInf[index].right,
	                            top: '0px',
	                            transition: 'all .4s',
	                            color: 'rgb(84, 182, 231)'
	                        }
	                    },
	                    dataInf[index].buttonInnerHTML
	                )
	            );
	        }
	    }]);

	    return DataItemComponent;
	}(_react.Component);

	exports.default = DataItem;

/***/ },

/***/ 196:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _combination_element = __webpack_require__(197);

	var _combination_element2 = _interopRequireDefault(_combination_element);

	var _connect_canvas = __webpack_require__(202);

	var _connect_canvas2 = _interopRequireDefault(_connect_canvas);

	var _combination_res = __webpack_require__(203);

	var _combination_res2 = _interopRequireDefault(_combination_res);

	var _combination_start = __webpack_require__(204);

	var _combination_start2 = _interopRequireDefault(_combination_start);

	var _draw = __webpack_require__(205);

	var _draw2 = _interopRequireDefault(_draw);

	var _getOffset = __webpack_require__(201);

	var _getOffset2 = _interopRequireDefault(_getOffset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	var Combination = _react2.default.createClass({
	    displayName: 'Combination',

	    canvasWidth: 780 * window.devicePixelRatio,
	    canvasHeight: 780 * window.devicePixelRatio,
	    disTop: 52,
	    disLeft: 98,
	    outerPadding: 10,
	    drawContext: null,
	    focusParent: null,
	    lastDrawIsFocuse: false,
	    itemMouseMove: function itemMouseMove(ev) {

	        var ACTIVE_EL = this.props.activeEl;

	        var offset = this.getContainerffset();

	        if (ACTIVE_EL) {

	            this.props.handleItemMouseMove(ev.pageX - offset.x - ACTIVE_EL.downPos.x, ev.pageY - offset.y - ACTIVE_EL.downPos.y);
	        }
	    },
	    getContainerffset: function getContainerffset() {
	        return (0, _getOffset2.default)(this.refs.component.refs.content);
	    },
	    getContext: function getContext() {
	        return this.refs.component.refs.canvas.refs.canvasContent.refs.context.getContext('2d');
	    },
	    getCanvas: function getCanvas() {
	        return this.refs.component.refs.canvas.refs.canvasContent.refs.context;
	    },
	    componentDidMount: function componentDidMount() {
	        this.drawContext = new _draw2.default(this.getContext(), {
	            lineWidth: 2,
	            lineJoin: 'round',
	            strokeStyle: '#333',
	            disTop: this.disTop,
	            disLeft: this.disLeft,
	            content: this.getCanvas(),
	            scale: window.devicePixelRatio
	        });
	    },
	    componentWillUpdate: function componentWillUpdate(nextProps, nextState) {
	        var activeIndex = nextProps.activeIndex;
	        this.drawSaveContext(nextProps.connectIndex);
	    },
	    drawSaveContext: function drawSaveContext(connectIndex) {
	        this.drawContext.reDraw(connectIndex);
	    },
	    drawLineMouseMove: function drawLineMouseMove(ev, id) {
	        var activeIndex = this.props.activeIndex;

	        if (activeIndex.length == 0) return;

	        var pos = (0, _getOffset2.default)(this.getCanvas());

	        this.drawSaveContext(this.props.connectIndex);
	        this.drawContext.beginPath();
	        this.drawContext.lineTo(activeIndex[0].pos.x + (activeIndex[0].buttonType === 1 ? this.disLeft : 0), activeIndex[0].pos.y + this.disTop, ev.pageX - pos.x, ev.pageY - pos.y, activeIndex[0].buttonType);
	    },
	    drawDeleteLineMouseMove: function drawDeleteLineMouseMove(ev) {

	        var pos = (0, _getOffset2.default)(this.getCanvas());
	        var inf = this.drawContext.getFocusLineInf(ev.pageX - pos.x, ev.pageY - pos.y);

	        var id = inf && inf.id,
	            lineArr = inf && inf.lineArr;

	        if (id && lineArr) {

	            this.lastDrawIsFocuse = true;

	            var id1 = id.split('&')[0];

	            this.focusParent = {
	                type: id1.split('.')[0],
	                index: id1.split('.')[1]
	            };
	            this.drawContext.drawWithColor(lineArr, 'red');
	        } else {

	            if (this.lastDrawIsFocuse) {
	                this.lastDrawIsFocuse = false;
	                this.drawContext.reDraw(this.props.connectIndex);
	            }

	            this.focusParent = null;
	        }
	    },
	    handleMouseMove: function handleMouseMove(ev, id) {
	        this.itemMouseMove(ev);
	        this.drawLineMouseMove(ev, id);
	        this.drawDeleteLineMouseMove(ev);
	    },
	    handleRemoveLine: function handleRemoveLine() {

	        var focusParent = this.focusParent;

	        if (focusParent) {
	            this.props.handleRemoveLine(focusParent.type, focusParent.index);
	        }
	    },
	    render: function render() {
	        var _extends2;

	        return _react2.default.createElement(CombinationComponent, _extends({
	            ref: 'component'
	        }, this.props, (_extends2 = {
	            disTop: this.disTop,
	            disLeft: this.disLeft,
	            outerPadding: this.outerPadding,
	            getContainerffset: this.getContainerffset,
	            canvasWidth: this.canvasWidth,
	            canvasHeight: this.canvasHeight,
	            handleMouseMove: this.handleMouseMove
	        }, _defineProperty(_extends2, 'outerPadding', this.outerPadding), _defineProperty(_extends2, 'handleRemoveLine', this.handleRemoveLine), _extends2)));
	    }
	});

	var CombinationComponent = function (_Component) {
	    _inherits(CombinationComponent, _Component);

	    function CombinationComponent() {
	        _classCallCheck(this, CombinationComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(CombinationComponent).apply(this, arguments));
	    }

	    _createClass(CombinationComponent, [{
	        key: 'render',
	        value: function render() {
	            var _this2 = this;

	            return _react2.default.createElement(
	                'section',
	                {
	                    ref: 'content',
	                    onMouseMove: this.props.handleMouseMove,
	                    onMouseUp: this.props.handleItemMouseUp,
	                    onClick: this.props.handleItemOuterClearClick,
	                    style: {
	                        width: '780px',
	                        height: '600px',
	                        border: '10px solid #f5f5f5',
	                        background: '#f5f5f5',
	                        borderRadius: '40px',
	                        marginTop: '20px',
	                        position: 'relative'
	                    }
	                },
	                _react2.default.createElement(
	                    'div',
	                    {
	                        style: {
	                            height: '50px',
	                            lineHeight: '50px',
	                            width: '100px',
	                            color: '#f5f5f5',
	                            fontSize: '20px',
	                            background: 'rgb(84, 182, 231)',
	                            textAlign: 'center',
	                            position: 'absolute',
	                            top: '-17px',
	                            left: '-42px',
	                            zIndex: '1',
	                            fontWeight: 'bold',
	                            transform: 'rotate(-45deg)'
	                        }
	                    },
	                    '组合'
	                ),
	                _react2.default.createElement(
	                    'section',
	                    {
	                        style: {
	                            width: '100%',
	                            position: 'relative',
	                            height: '100%'
	                        }
	                    },
	                    _react2.default.createElement(_combination_res2.default, {
	                        inf: this.props.res,
	                        disTop: this.props.disTop,
	                        disLeft: this.props.disLeft,
	                        outerPadding: this.props.outerPadding,
	                        getContainerffset: this.props.getContainerffset,
	                        handleConnectButtonClick: this.props.handleConnectButtonClick
	                    }),
	                    _react2.default.createElement(_combination_start2.default, {
	                        connectIndex: this.props.connectIndex,
	                        dispatch: this.props.dispatch
	                    }),
	                    _react2.default.createElement(_connect_canvas2.default, _extends({
	                        ref: 'canvas'
	                    }, this.props)),
	                    this.props.dataInf.map(function (item, index) {
	                        return _react2.default.createElement(_combination_element2.default, _extends({
	                            key: index
	                        }, item, _this2.props));
	                    }),
	                    this.props.algorithmInf.map(function (item, index) {
	                        return _react2.default.createElement(_combination_element2.default, _extends({
	                            key: index
	                        }, item, _this2.props));
	                    })
	                )
	            );
	        }
	    }]);

	    return CombinationComponent;
	}(_react.Component);

	exports.default = Combination;

/***/ },

/***/ 197:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _delete = __webpack_require__(198);

	var _delete2 = _interopRequireDefault(_delete);

	var _more = __webpack_require__(199);

	var _more2 = _interopRequireDefault(_more);

	var _more_content = __webpack_require__(200);

	var _more_content2 = _interopRequireDefault(_more_content);

	var _getOffset = __webpack_require__(201);

	var _getOffset2 = _interopRequireDefault(_getOffset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CombinationElement = _react2.default.createClass({
	    displayName: 'CombinationElement',
	    handleClick: function handleClick(e) {
	        e.stopPropagation();
	        this.props.handleRemoveButtonClick(this.props.type, this.props.index);
	    },
	    handleMouseDown: function handleMouseDown(e) {
	        var offset = (0, _getOffset2.default)(e.currentTarget);

	        this.props.handleItemMouseDown(this.props.type, this.props.index, {
	            x: e.pageX - offset.x,
	            y: e.pageY - offset.y
	        });
	    },
	    handleConnectClick: function handleConnectClick(e) {
	        e.stopPropagation();
	        var buttonOuter = this.refs.CombinationElementComponent.refs.buttonOuter;
	        return {
	            x: parseFloat(buttonOuter.style.left),
	            y: parseFloat(buttonOuter.style.top)
	        };
	    },
	    render: function render() {
	        return _react2.default.createElement(CombinationElementComponent, _extends({
	            ref: 'CombinationElementComponent'
	        }, this.props, {
	            handleRemoveButtonClick: this.handleClick,
	            handleConnectClick: this.handleConnectClick,
	            handleMouseDown: this.handleMouseDown,
	            handleStopPropagation: this.handleStopPropagation
	        }));
	    }
	});

	var CombinationElementComponent = function (_Component) {
	    _inherits(CombinationElementComponent, _Component);

	    function CombinationElementComponent() {
	        _classCallCheck(this, CombinationElementComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(CombinationElementComponent).apply(this, arguments));
	    }

	    _createClass(CombinationElementComponent, [{
	        key: 'render',
	        value: function render() {
	            var index = this.props.index,
	                type = this.props.type;
	            return _react2.default.createElement(
	                'div',
	                {
	                    onMouseDown: this.props.handleMouseDown,
	                    ref: 'buttonOuter',
	                    className: 'combination-element',
	                    style: {
	                        width: '80px',
	                        height: '80px',
	                        boxShadow: '#333 1px 1px 10px',
	                        padding: this.props.outerPadding + 'px ' + this.props.outerPadding + 'px',
	                        transition: 'transform .4s, box-shadow .4s',
	                        // transform: this.props.itemHasAdd ? 'scale(1, 1)' : 'scale(0, 0)',
	                        opacity: .8,
	                        position: 'absolute',
	                        borderRadius: type == 1 ? '20px' : '100%',
	                        left: this.props.itemLeft,
	                        top: this.props.itemTop,
	                        background: this.props.background,
	                        cursor: 'pointer'
	                    }
	                },
	                _react2.default.createElement(
	                    'p',
	                    {
	                        style: {
	                            width: '80%',
	                            margin: '0 auto',
	                            textAlign: 'center',
	                            color: '#000',
	                            height: '40px',
	                            lineHeight: '40px',
	                            fontSize: '14px',
	                            textOverflow: 'ellipsis',
	                            whiteSpace: 'nowrap',
	                            overflow: 'hidden',
	                            borderBottom: '2px solid #000'
	                        }
	                    },
	                    this.props.value
	                ),
	                _react2.default.createElement(_delete2.default, this.props),
	                _react2.default.createElement(_more2.default, this.props),
	                _react2.default.createElement(_more_content2.default, this.props),
	                _react2.default.createElement(InInterface, _extends({
	                    buttonType: 0,
	                    type: 0,
	                    handleConnectClick: this.props.handleConnectClick
	                }, this.props)),
	                _react2.default.createElement(InInterface, _extends({
	                    buttonType: 1,
	                    type: 1,
	                    handleConnectClick: this.props.handleConnectClick
	                }, this.props))
	            );
	        }
	    }]);

	    return CombinationElementComponent;
	}(_react.Component);

	var InInterface = _react2.default.createClass({
	    displayName: 'InInterface',
	    handleConnectClick: function handleConnectClick(e) {
	        var pos = this.props.handleConnectClick(e);

	        this.props.handleConnectButtonClick(this.props.type, this.props.index, this.props.buttonType, pos);
	    },
	    handleMouseDown: function handleMouseDown(e) {
	        e.stopPropagation();
	    },

	    // 次组件在初始化一次后除非接口变化便不再render
	    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	        if (!nextProps.connectInterface) {
	            return false;
	        } else {
	            return true;
	        }
	    },
	    render: function render() {
	        return _react2.default.createElement(InInterfaceComponent, _extends({}, this.props, {
	            handleMouseDown: this.handleMouseDown,
	            handleConnectClick: this.handleConnectClick,
	            buttonTypeLeft: this.buttonTypeLeft,
	            interfaceTop: this.interfaceTop
	        }));
	    }
	});

	var InInterfaceComponent = function (_Component2) {
	    _inherits(InInterfaceComponent, _Component2);

	    function InInterfaceComponent() {
	        _classCallCheck(this, InInterfaceComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(InInterfaceComponent).apply(this, arguments));
	    }

	    _createClass(InInterfaceComponent, [{
	        key: 'render',
	        value: function render() {
	            var buttonType = this.props.buttonType,
	                connectInterface = this.props.connectInterface;
	            var background = void 0;
	            if (connectInterface) {
	                if (buttonType === 0 && !connectInterface.inInterface) {
	                    background = '#000';
	                }
	                if (buttonType === 1 && !connectInterface.outInterface) {
	                    background = '#000';
	                }
	            }
	            return _react2.default.createElement(
	                'div',
	                {
	                    onClick: this.props.handleConnectClick,
	                    onMouseDown: this.props.handleMouseDown,
	                    className: 'interface',
	                    style: {
	                        width: '14px',
	                        height: '14px',
	                        border: '2px solid #000',
	                        position: 'absolute',
	                        top: '50%',
	                        marginTop: '-7px',
	                        display: this.props.buttonType == 0 && this.props.type == 0 ? 'none' : 'block',
	                        left: this.props.buttonType == 1 ? '82px' : '0px',
	                        color: '#333',
	                        textAlign: 'center',
	                        lineHeight: '14px',
	                        borderRadius: '100%'
	                    }
	                },
	                _react2.default.createElement('div', {
	                    className: 'interface-bg',
	                    style: {
	                        width: '10px',
	                        height: '10px',
	                        borderRadius: '100%',
	                        margin: '2px auto',
	                        background: background
	                    }
	                })
	            );
	        }
	    }]);

	    return InInterfaceComponent;
	}(_react.Component);

	exports.default = CombinationElement;

/***/ },

/***/ 198:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var DeleteButton = _react2.default.createClass({
	    displayName: 'DeleteButton',
	    render: function render() {
	        return _react2.default.createElement(DeleteButtonComponent, this.props);
	    }
	});

	var DeleteButtonComponent = function (_Component) {
	    _inherits(DeleteButtonComponent, _Component);

	    function DeleteButtonComponent() {
	        _classCallCheck(this, DeleteButtonComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(DeleteButtonComponent).apply(this, arguments));
	    }

	    _createClass(DeleteButtonComponent, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'span',
	                {
	                    onClick: this.props.handleRemoveButtonClick,
	                    className: 'delete',
	                    style: {
	                        width: '16px',
	                        transition: 'all .4s',
	                        height: '16px',
	                        lineHeight: '16px',
	                        fontSize: '20px',
	                        borderRadius: '100%',
	                        border: '2px solid #000',
	                        display: 'block',
	                        float: 'left',
	                        textAlign: 'center',
	                        color: '#000',
	                        transform: 'rotate(45deg)',
	                        margin: '10px 10px'
	                    }
	                },
	                '+'
	            );
	        }
	    }]);

	    return DeleteButtonComponent;
	}(_react.Component);

	exports.default = DeleteButton;

/***/ },

/***/ 199:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MoreButton = _react2.default.createClass({
	    displayName: 'MoreButton',
	    handleClick: function handleClick() {
	        this.props.handleShowMore(this.props.type, this.props.index);
	    },
	    render: function render() {
	        return _react2.default.createElement(MoreButtonComponent, _extends({}, this.props, {
	            handleClick: this.handleClick
	        }));
	    }
	});

	var MoreButtonComponent = function (_Component) {
	    _inherits(MoreButtonComponent, _Component);

	    function MoreButtonComponent() {
	        _classCallCheck(this, MoreButtonComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(MoreButtonComponent).apply(this, arguments));
	    }

	    _createClass(MoreButtonComponent, [{
	        key: 'render',
	        value: function render() {
	            var _ref;

	            var parameters = this.props.serverData.parameters,
	                type = this.props.type;

	            return _react2.default.createElement(
	                'span',
	                {
	                    className: 'more',
	                    onClick: this.props.handleClick,
	                    style: (_ref = {
	                        width: '16px',
	                        height: '16px',
	                        transition: 'all .4s',
	                        lineHeight: '8px',
	                        fontSize: '20px',
	                        borderRadius: '100%',
	                        border: '2px solid ' + (this.props.showParameter ? 'red' : '#000'),
	                        display: 'block',
	                        float: 'left',
	                        textAlign: 'center',
	                        color: this.props.showParameter ? 'red' : '#000'
	                    }, _defineProperty(_ref, 'display', type == 1 && parameters && parameters.length > 0 ? 'block' : 'none'), _defineProperty(_ref, 'margin', '10px 10px'), _ref)
	                },
	                '..'
	            );
	        }
	    }]);

	    return MoreButtonComponent;
	}(_react.Component);

	exports.default = MoreButton;

/***/ },

/***/ 200:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var MoreContent = _react2.default.createClass({
	    displayName: 'MoreContent',
	    render: function render() {
	        return _react2.default.createElement(MoreContentComponent, this.props);
	    }
	});

	var MoreContentComponent = function (_Component) {
	    _inherits(MoreContentComponent, _Component);

	    function MoreContentComponent() {
	        _classCallCheck(this, MoreContentComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(MoreContentComponent).apply(this, arguments));
	    }

	    _createClass(MoreContentComponent, [{
	        key: 'render',
	        value: function render() {
	            var parameters = this.props.serverData.parameters,
	                type = this.props.type,
	                indexId = this.props.index,
	                countParametersLen = this.props.countParameters ? this.props.countParameters.len : 0;

	            return _react2.default.createElement(
	                'div',
	                {
	                    style: {
	                        width: '100px',
	                        padding: '10px 10px',
	                        background: this.props.background,
	                        borderRadius: '20px',
	                        opacity: '0.8',
	                        transition: 'transform .4s',
	                        transform: this.props.showParameter ? 'scale(1, 1)' : 'scale(0, 0)',
	                        boxShadow: '#333 1px 1px 10px',
	                        position: 'absolute',
	                        display: type == 1 && parameters && parameters.length > 0 ? 'block' : 'none',
	                        top: '-100%',
	                        left: '100%'
	                    }
	                },
	                _react2.default.createElement(
	                    'h3',
	                    {
	                        style: {
	                            margin: '0',
	                            fontSize: '14px',
	                            lineHeight: '14px',
	                            height: '14px',
	                            textAlign: 'center'
	                        }
	                    },
	                    _react2.default.createElement(
	                        'span',
	                        null,
	                        '算法参数'
	                    ),
	                    _react2.default.createElement(
	                        'span',
	                        {
	                            style: {
	                                marginLeft: '4px',
	                                color: countParametersLen ? '#333' : 'red'
	                            }
	                        },
	                        countParametersLen,
	                        '/',
	                        parameters && parameters.length
	                    )
	                ),
	                _react2.default.createElement(
	                    'div',
	                    {
	                        style: {
	                            width: '100%',
	                            paddingTop: '10px'
	                        }
	                    },
	                    parameters && parameters.map(function (item, index) {
	                        return _react2.default.createElement(
	                            'div',
	                            {
	                                style: {
	                                    width: '100px',
	                                    height: '24px'
	                                }
	                            },
	                            _react2.default.createElement(
	                                'span',
	                                {
	                                    style: {
	                                        fontSize: '14px',
	                                        width: '32px'
	                                    }
	                                },
	                                item.parameter_name,
	                                '(',
	                                item.parameter_type,
	                                ')'
	                            ),
	                            _react2.default.createElement('input', {
	                                onChange: function () {

	                                    var val = this.refs['pValue' + index].value;

	                                    this.props.handleSetParameters(type, indexId, item.parameter_id, val);
	                                }.bind(this),

	                                ref: 'pValue' + index,
	                                style: {
	                                    width: '60px',
	                                    marginLeft: '8px',
	                                    textAlign: 'center',
	                                    outline: 'none',
	                                    height: '18px',
	                                    border: 'none',
	                                    marginTop: '3px',
	                                    borderRadius: '6px',
	                                    padding: '0px 0px',
	                                    fontWeight: 'bold',
	                                    background: '#f5f5f5'
	                                },
	                                type: 'text',
	                                defaultValue: item.parameter_value
	                            })
	                        );
	                    }.bind(this))
	                )
	            );
	        }
	    }]);

	    return MoreContentComponent;
	}(_react.Component);

	exports.default = MoreContent;

/***/ },

/***/ 201:
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var getOffset = function getOffset(context) {
	    var left = void 0,
	        top = void 0;

	    left = top = 0;

	    while (context) {
	        left += context.offsetLeft;
	        top += context.offsetTop;
	        context = context.offsetParent;
	    }

	    return {
	        x: left,
	        y: top
	    };
	};

	exports.default = getOffset;

/***/ },

/***/ 202:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var ConnectCanvas = _react2.default.createClass({
	    displayName: 'ConnectCanvas',
	    render: function render() {
	        return _react2.default.createElement(ConnectCanvasComponent, _extends({
	            ref: 'canvasContent'
	        }, this.props));
	    }
	});

	var ConnectCanvasComponent = function (_Component) {
	    _inherits(ConnectCanvasComponent, _Component);

	    function ConnectCanvasComponent() {
	        _classCallCheck(this, ConnectCanvasComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(ConnectCanvasComponent).apply(this, arguments));
	    }

	    _createClass(ConnectCanvasComponent, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement('canvas', {
	                onClick: this.props.handleRemoveLine,
	                style: {
	                    width: this.props.canvasWidth / window.devicePixelRatio + 'px',
	                    height: this.props.canvasHeight / window.devicePixelRatio + 'px'
	                },
	                ref: 'context',
	                width: this.props.canvasWidth,
	                height: this.props.canvasHeight
	            });
	        }
	    }]);

	    return ConnectCanvasComponent;
	}(_react.Component);

	exports.default = ConnectCanvas;

/***/ },

/***/ 203:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _getOffset = __webpack_require__(201);

	var _getOffset2 = _interopRequireDefault(_getOffset);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CombinationRes = _react2.default.createClass({
	    displayName: 'CombinationRes',
	    shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {
	        return nextProps.inf == this.props.inf;
	    },
	    handleClick: function handleClick(e) {
	        var type = '2',
	            index = 0,
	            buttonType = 0;

	        var containerOffset = this.props.getContainerffset();

	        var pos = (0, _getOffset2.default)(e.target);

	        this.props.handleConnectButtonClick(type, index, buttonType, {
	            x: pos.x - containerOffset.x,
	            y: pos.y - containerOffset.y - this.props.disTop + this.props.outerPadding
	        });
	    },
	    render: function render() {
	        return _react2.default.createElement(CombinationResComponent, {
	            inf: this.props.inf,
	            handleClick: this.handleClick
	        });
	    }
	});

	var CombinationResComponent = function (_Component) {
	    _inherits(CombinationResComponent, _Component);

	    function CombinationResComponent() {
	        _classCallCheck(this, CombinationResComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(CombinationResComponent).apply(this, arguments));
	    }

	    _createClass(CombinationResComponent, [{
	        key: 'render',
	        value: function render() {

	            var connect = this.props.inf['20'].connectInterface.inInterface;

	            return _react2.default.createElement(
	                'div',
	                {
	                    onClick: this.props.handleClick,
	                    className: 'combination-res-component',
	                    style: {
	                        width: '16px',
	                        height: '16px',
	                        border: '2px solid rgb(84, 182, 231)',
	                        borderRadius: '100%',
	                        background: '#f5f5f5',
	                        position: 'absolute',
	                        top: '50%',
	                        right: '-20px',
	                        cursor: 'pointer',
	                        marginTop: '-10px'
	                    }
	                },
	                _react2.default.createElement('div', {
	                    className: 'combination-res-component-hidden',
	                    style: {
	                        width: '12px',
	                        height: '12px',
	                        background: 'rgb(84, 182, 231)',
	                        display: connect ? 'none' : 'block',
	                        borderRadius: '100%',
	                        margin: '2px 2px'
	                    }
	                })
	            );
	        }
	    }]);

	    return CombinationResComponent;
	}(_react.Component);

	exports.default = CombinationRes;

/***/ },

/***/ 204:
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	var _react = __webpack_require__(2);

	var _react2 = _interopRequireDefault(_react);

	var _combination_action = __webpack_require__(188);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

	var CombinationStart = _react2.default.createClass({
	    displayName: 'CombinationStart',
	    shouldComponentUpdate: function shouldComponentUpdate() {
	        return false;
	    },
	    handleClick: function handleClick() {

	        var connectIndex = this.props.connectIndex;

	        var data = [],
	            model = [];
	        var lastItem = void 0;

	        var runFlag = true;

	        connectIndex.forEach(function (item, index) {

	            if (item.data.type != 0) {
	                runFlag = false;
	            } else {
	                data.push({
	                    id: item.data.serverData.dataset_id
	                });
	            }

	            if (!runFlag) return;

	            item = item.child[0];

	            while (item && !item.data.last) {

	                if (!lastItem) {
	                    model.push({
	                        id: item.data.serverData.algorithm_id,
	                        parameters: item.data.serverData.parameters,
	                        input: data[index].id,
	                        output: item.child[0] && !item.child[0].data.last && item.child[0].data.serverData.algorithm_id
	                    });
	                } else {
	                    model.push({
	                        id: item.data.serverData.algorithm_id,
	                        parameters: item.data.serverData.parameters,
	                        input: lastItem.data.serverData.algorithm_id,
	                        output: item.child[0] && !item.child[0].data.last && item.child[0].data.serverData.algorithm_id
	                    });
	                }
	                lastItem = item;
	                item = item.child[0];
	            }
	        });

	        runFlag && this.props.dispatch((0, _combination_action.fetchConnect)({
	            protocol_id: 'A-3-2',
	            platform: "java",
	            data: data,
	            model: model
	        }));
	    },
	    render: function render() {
	        return _react2.default.createElement(CombinationStartComponent, {
	            handleClick: this.handleClick
	        });
	    }
	});

	var CombinationStartComponent = function (_Component) {
	    _inherits(CombinationStartComponent, _Component);

	    function CombinationStartComponent() {
	        _classCallCheck(this, CombinationStartComponent);

	        return _possibleConstructorReturn(this, Object.getPrototypeOf(CombinationStartComponent).apply(this, arguments));
	    }

	    _createClass(CombinationStartComponent, [{
	        key: 'render',
	        value: function render() {
	            return _react2.default.createElement(
	                'div',
	                {
	                    onClick: this.props.handleClick,
	                    className: 'combination-start-component',
	                    style: {
	                        width: '48px',
	                        height: '48px',
	                        transition: 'all .4s',
	                        border: '2px solid rgb(84, 182, 231)',
	                        borderRadius: '100%',
	                        background: '#f5f5f5',
	                        cursor: 'pointer',
	                        position: 'absolute',
	                        right: '-35px',
	                        top: '50%',
	                        marginTop: '-70px',
	                        textAlign: 'center',
	                        lineHeight: '48px',
	                        color: 'rgb(84, 182, 231)'
	                    }
	                },
	                '运行'
	            );
	        }
	    }]);

	    return CombinationStartComponent;
	}(_react.Component);

	exports.default = CombinationStart;

/***/ },

/***/ 205:
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var Draw = function () {
	    function Draw(context, conf) {
	        _classCallCheck(this, Draw);

	        this.context = context;
	        this.lineWidth = conf.lineWidth;
	        this.context.lineWidth = conf.lineWidth;
	        this.context.lineJoin = conf.lineJoin;
	        this.context.strokeStyle = conf.strokeStyle;
	        this.content = conf.content;
	        this.disTop = conf.disTop;
	        this.disLeft = conf.disLeft;
	        this.saveLine = {};

	        if (conf.scale) {
	            this.context.scale(conf.scale, conf.scale);
	        }
	    }

	    _createClass(Draw, [{
	        key: 'reDraw',
	        value: function reDraw(connectIndex) {
	            var _this = this;

	            var child = void 0;

	            this.clear();
	            this.saveLine = {};

	            connectIndex.forEach(function (item, index) {
	                while (item) {
	                    _this.context.beginPath();
	                    child = item.child[0];
	                    if (child) {
	                        _this.lineTo(item.data.pos.x + _this.disLeft, item.data.pos.y + _this.disTop, child.data.pos.x, child.data.pos.y + _this.disTop, true, //不开启反转
	                        item.data.type + '.' + item.data.index, child.data.type + '.' + child.data.index);
	                    }
	                    item = child;
	                }
	            });
	        }
	    }, {
	        key: 'drawWithColor',
	        value: function drawWithColor(lineArr, color) {
	            var temp = this.context.strokeStyle;
	            this.context.strokeStyle = color;
	            this.lineTo(lineArr[0].x, lineArr[0].y, lineArr.slice(-1)[0].x, lineArr.slice(-1)[0].y, true);
	        }
	    }, {
	        key: 'drawAng',
	        value: function drawAng(beginx, beginy, oldwayArr, r) {
	            var _this2 = this;

	            var wayArr = Array.from(oldwayArr);

	            var DIS = this.lineWidth;
	            var angWidth = 10,
	                angHeight = 10,
	                showAng = 100;

	            var prvX = beginx,
	                prvY = beginy;
	            var disX = void 0,
	                disY = void 0;

	            this.context.beginPath();
	            this.context.lineJoin = 'bevel';

	            if (!r) {
	                //反转
	                wayArr.reverse();

	                var temp = wayArr.shift();

	                wayArr.push({
	                    x: beginx,
	                    y: beginy
	                });

	                prvX = temp.x;
	                prvY = temp.y;
	            }

	            wayArr.forEach(function (item) {
	                disX = item.x - prvX;
	                disY = item.y - prvY;
	                if (disX === 0) {
	                    //竖

	                    if (Math.abs(disY) >= showAng) {

	                        if (disY > 0) {
	                            __draw.call(_this2, prvX - angWidth / 2 + DIS / 1, prvY + (disY - angHeight) / 2, prvX + DIS / 1, prvY + disY / 2, prvX + angWidth / 2 + DIS / 1, prvY + (disY - angHeight) / 2, prvX + DIS / 1, prvY + (disY + angHeight) / 2);
	                        } else {
	                            __draw.call(_this2, prvX - angWidth / 2 + DIS / 1, prvY + (disY + angHeight) / 2, prvX + DIS / 1, prvY + disY / 2, prvX + angWidth / 2 + DIS / 1, prvY + (disY + angHeight) / 2, prvX + DIS / 1, prvY + (disY - angHeight) / 2);
	                        }
	                    }
	                } else if (disY === 0) {
	                    //横
	                    if (Math.abs(disX) >= showAng) {
	                        if (disX > 0) {
	                            __draw.call(_this2, prvX + (disX - angWidth) / 2, prvY + (disY - angHeight) / 2, prvX + disX / 2, prvY, prvX + (disX - angWidth) / 2, prvY + (disY + angHeight) / 2, prvX + (disX + angWidth) / 2, prvY);
	                        } else {
	                            __draw.call(_this2, prvX + (disX + angWidth) / 2, prvY + (disY - angHeight) / 2, prvX + disX / 2, prvY, prvX + (disX + angWidth) / 2, prvY + (disY + angHeight) / 2, prvX + (disX - angWidth) / 2, prvY);
	                        }
	                    }
	                }

	                prvX = item.x;
	                prvY = item.y;
	            });
	            this.context.lineJoin = 'round';
	        }
	    }, {
	        key: 'lineTo',
	        value: function lineTo(oldx, oldy, x, y, r, id1, id2) {
	            var _this3 = this;

	            var colorArr = void 0;
	            var DIS = 2;
	            var wayArr = _findWay(oldx, oldy, x, y, r);

	            if (id1 && id2) {
	                var cp = Array.from(wayArr);
	                cp.unshift({
	                    x: oldx,
	                    y: oldy
	                });
	                this.saveLine[id1 + '&' + id2] = cp;
	            }

	            this.drawAng(oldx, oldy, wayArr, r);
	            this.context.moveTo(oldx, oldy);

	            wayArr.forEach(function (item, index) {

	                _this3.context.lineTo(item.x + DIS, item.y);
	                oldx = item.x;
	                oldy = item.y;
	                _this3.context.stroke();
	            });
	            this.context.strokeStyle = '#333';
	        }
	    }, {
	        key: 'beginPath',
	        value: function beginPath() {
	            this.context.beginPath();
	        }
	    }, {
	        key: 'clear',
	        value: function clear() {
	            this.context.clearRect(0, 0, this.content.width, this.content.height);
	        }
	    }, {
	        key: 'getFocusLineInf',
	        value: function getFocusLineInf(x, y) {
	            var saveLine = this.saveLine;

	            var inf = void 0;

	            for (var key in saveLine) {
	                if (saveLine.hasOwnProperty(key)) {
	                    inf = __judInLine.call(this, x, y, saveLine[key], key);
	                }
	                if (inf) return inf;
	            }
	        }
	    }]);

	    return Draw;
	}();

	exports.default = Draw;


	function __judInLine(x, y, lineArr, id) {
	    var disX = void 0,
	        disY = void 0;
	    var DEV = 8;

	    for (var i = 0, len = lineArr.length - 1; i < len; i++) {
	        disX = lineArr[i + 1].x - lineArr[i].x, disY = lineArr[i + 1].y - lineArr[i].y;

	        if (disX === 0) {

	            if (disY > 0) {

	                if (y >= lineArr[i].y && y <= lineArr[i + 1].y && x >= lineArr[i].x && x <= lineArr[i].x + this.lineWidth * DEV) {
	                    return {
	                        lineArr: lineArr,
	                        id: id
	                    };
	                }
	            } else {

	                if (y >= lineArr[i + 1].y && y <= lineArr[i].y && x >= lineArr[i].x && x <= lineArr[i].x + this.lineWidth * DEV) {
	                    return {
	                        lineArr: lineArr,
	                        id: id
	                    };
	                }
	            }
	        } else if (disY === 0) {

	            if (disX > 0) {

	                if (x >= lineArr[i].x && x <= lineArr[i + 1].x && y >= lineArr[i].y && y <= lineArr[i].y + this.lineWidth * DEV) {
	                    return {
	                        lineArr: lineArr,
	                        id: id
	                    };
	                }
	            } else {

	                if (x >= lineArr[i + 1].x && x <= lineArr[i].x && y >= lineArr[i].y && y <= lineArr[i].y + this.lineWidth * DEV) {
	                    return {
	                        lineArr: lineArr,
	                        id: id
	                    };
	                }
	            }
	        }
	    }
	}

	function _findWay(oldx, oldy, x, y, r) {
	    var way = [];

	    var DIS = !r ? -50 : 50;

	    var judOldx = oldx,
	        judOldy = oldy,
	        judx = x,
	        judy = y;

	    if (!r) {

	        judOldx = x;
	        judx = oldx;
	    }

	    if (judx > judOldx) {
	        way.push({
	            x: (x - oldx) / 2 + oldx,
	            y: oldy
	        }, {
	            x: (x - oldx) / 2 + oldx,
	            y: y
	        }, {
	            x: x,
	            y: y
	        });
	    } else {
	        way.push({
	            x: oldx + DIS,
	            y: oldy
	        }, {
	            x: oldx + DIS,
	            y: (y - oldy) / 2 + oldy
	        }, {
	            x: x - DIS,
	            y: (y - oldy) / 2 + oldy
	        }, {
	            x: x - DIS,
	            y: y
	        }, {
	            x: x,
	            y: y
	        });
	    }
	    return way;
	}

	function __draw() {
	    for (var i = 0, len = arguments.length; i < len; i += 2) {
	        if (i === 0) {
	            this.context.moveTo(arguments[i], arguments[i + 1]);
	        } else {
	            this.context.lineTo(arguments[i], arguments[i + 1]);
	        }
	    }
	    this.context.closePath();
	    this.context.fill();
	}

	//将两个rgb值等分
	function __handleRgb(rgb1, rgb2, len) {
	    var matchRgb = /(\d+)/g;

	    var _rgb1$match = rgb1.match(matchRgb);

	    var _rgb1$match2 = _slicedToArray(_rgb1$match, 3);

	    var x1 = _rgb1$match2[0];
	    var y1 = _rgb1$match2[1];
	    var z1 = _rgb1$match2[2];

	    var _rgb2$match = rgb2.match(matchRgb);

	    var _rgb2$match2 = _slicedToArray(_rgb2$match, 3);

	    var x2 = _rgb2$match2[0];
	    var y2 = _rgb2$match2[1];
	    var z2 = _rgb2$match2[2];
	    var disX = x2 - x1;
	    var disY = y2 - y1;
	    var disZ = z2 - z1;


	    var colorArr = [];

	    for (var i = 0; i < len + 1; i++) {
	        colorArr.push('rgb(' + (x1 * 1 + Math.floor(disX * i / len)) + ',' + (y1 * 1 + Math.floor(disY * i / len)) + ',' + (z1 * 1 + Math.floor(disZ * i / len)) + ')');
	    }
	    return colorArr;
	}

/***/ }

});